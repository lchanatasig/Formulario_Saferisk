@{
  
    Layout = null;
    var successMessage = TempData["SuccessMessage"] as string;
    var errorMessage = TempData["ErrorMessage"] as string;
}


<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <title>Formulario Empleado</title>
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css">
    <!-- Choices CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/choices.js/public/assets/styles/choices.min.css" />
    <!-- SweetAlert2 CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
</head>
<body>
    <div class="card" style="max-width: 600px; margin: 20px auto;">
        <div class="card-header">
            <h4>Formulario de registro</h4>
        </div>
        <div class="card-body">
            <form id="empleadoForm">
                <!-- Imagen (opcional) -->
                <div class="text-center mb-3">
                    <img src="~/assets/images/LogoAzul.png" style="width:150px" alt="Logo">
                </div>
                <!-- Campos del formulario -->
                <div class="mb-3">
                    <label for="employeeFullName" class="form-label">Nombres Completos</label>
                    <input type="text" class="form-control" id="employeeFullName" placeholder="Ingrese su nombre completo" required>
                </div>
                <div class="mb-3">
                    <label for="employeeProfile" class="form-label">Perfil</label>
                    <input type="text" class="form-control" id="employeeProfile" placeholder="Ingrese su perfil" required>
                </div>
                <div class="mb-5">
                    <label for="employeeBroker" class="form-label">Broker</label>
                    <select class="form-control" id="employeeBroker" name="BrokerId" required>
                        <option value="">Seleccione un broker</option>
                        @foreach (var broker in ViewBag.Brokers)
                        {
                            <option value="@broker.Value">@broker.Text</option>
                        }
                    </select>
                    <div class="invalid-feedback">Seleccione un broker válido.</div>
                </div>
                <div class="mb-3">
                    <label for="employeeEmail" class="form-label">Correo Electrónico</label>
                    <input type="email" class="form-control" id="employeeEmail" placeholder="Ingrese su correo electrónico" required>
                </div>
                <div class="mb-3">
                    <label for="employeeCity" class="form-label">Ciudad</label>
                    <input type="text" class="form-control" id="employeeCity" placeholder="Ingrese su ciudad" required>
                </div>
                <hr>
                <div class="text-end">
                    <button type="submit" class="btn btn-primary">Enviar</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Bootstrap JS y dependencias (opcional) -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Choices JS -->
    <script src="https://cdn.jsdelivr.net/npm/choices.js/public/assets/scripts/choices.min.js"></script>
    <!-- SweetAlert2 JS -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>

    <script>
        // Inicializa Choices para hacer el select buscable
        document.addEventListener('DOMContentLoaded', function () {
            const brokerSelect = document.getElementById('employeeBroker');
            new Choices(brokerSelect, {
                searchEnabled: true,
                shouldSort: false
            });
        });

        // Envío del formulario con fetch y manejo de mensajes con SweetAlert2
        document.getElementById('empleadoForm').addEventListener('submit', async function(e) {
            e.preventDefault(); // Evita el comportamiento por defecto del formulario

            // Recopila los valores de los inputs
            const data = {
                nombresCompletos: document.getElementById('employeeFullName').value,
                perfil: document.getElementById('employeeProfile').value,
                broker: document.getElementById('employeeBroker').value,
                correo: document.getElementById('employeeEmail').value,
                ciudad: document.getElementById('employeeCity').value
            };

            try {
                const response = await fetch('@Url.Action("InsertarDatos", "Home")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });

                if (!response.ok) {
                    const errorData = await response.json();
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: errorData.message || 'Ocurrió un error al enviar los datos.'
                    });
                } else {
                    const result = await response.json();
                    Swal.fire({
                        icon: 'success',
                        title: 'Éxito',
                        text: result.message || 'Datos insertados correctamente.'
                    });
                    // Limpia el formulario si la operación fue exitosa
                    document.getElementById('empleadoForm').reset();
                }
            } catch (error) {
                console.error('Error al enviar los datos:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Ocurrió un error al enviar los datos.'
                });
            }
        });
    </script>
</body>
</html>
